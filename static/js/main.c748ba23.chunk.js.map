{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","getUser","usersFromServer","find","App","useState","todosFromServer","setTodos","setTitle","selectedUserId","setSelectedUserId","titleError","setTitleError","userError","setUserError","onSubmit","event","preventDefault","trim","newTodo","length","htmlFor","type","value","onChange","target","placeholder","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c748ba23.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos = [] }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n        data-id={todo.id}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(todosFromServer.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  })));\n\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [titleError, setTitleError] = useState('');\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [userError, setUserError] = useState('');\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError('');\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n    setUserError('');\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!selectedUserId || !title.trim()) {\n      if (!selectedUserId) {\n        setUserError('Please choose a user');\n      }\n\n      if (!title.trim()) {\n        setTitleError('Please enter a title');\n      }\n\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: todos.length > 0 ? todos[todos.length - 1].id + 1 : 1,\n      title: title.trim(),\n      userId: selectedUserId,\n      completed: false,\n      user: getUser(selectedUserId),\n    };\n\n    setTodos([...todos, newTodo]);\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            value={title}\n            onChange={handleTitleChange}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n          />\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserChange}\n            data-cy=\"userSelect\"\n            placeholder=\"Choose a user\"\n          >\n            <option value={0} disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}